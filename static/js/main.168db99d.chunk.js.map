{"version":3,"sources":["Quote.js","Buttons.js","helper.js","App.js","serviceWorker.js","index.js"],"names":["QuoteContainer","styled","div","_templateObject","QuoteText","p","_templateObject2","QuoteAuthor","_templateObject3","Quote","iconStyle","this","props","quoteText","quoteAuthor","react_default","a","createElement","className","style","Component","ButtonContainer","Buttons_templateObject","Button","button","Buttons_templateObject2","buttonColor","hoverColor","SocialButton","Buttons_templateObject3","QuoteButton","_templateObject4","Buttons","buttonNewQuote","tweetFunc","tumblrFunc","onClick","xmlns","width","height","viewBox","d","fillRule","clipRule","rng","max","Math","floor","random","Container","App_templateObject","bgColor","Main","main","App_templateObject2","theme","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","quotes","getQuote","bind","assertThisInitialized","setState","db","randomColor","concat","fontAws","paddingRight","fontSize","color","src_Quote","quote","author","styled_components_browser_esm","src_Buttons","document","target","href","encodeURIComponent","click","tweet","console","dir","tumblr","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.168db99d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\n\r\nconst QuoteContainer = styled.div`\r\n  margin-bottom: 70px;\r\n`\r\nconst QuoteText = styled.p`\r\n  margin: 0;\r\n  padding: 10px 30px;\r\n  font-size: 2.5ch;\r\n  line-height: 1.2em;\r\n  text-align: center;\r\n`\r\nconst QuoteAuthor = styled.p`\r\n  font-size: 1.9ch;\r\n  float: right;\r\n  margin: 0;\r\n  padding: 10px 30px;\r\n  align-self: flex-end;\r\n`\r\n\r\nclass Quote extends Component {\r\n  render() {\r\n    const iconStyle = this.props.iconStyle;\r\n    const quoteText = this.props.quoteText;\r\n    const quoteAuthor = this.props.quoteAuthor;\r\n      return (\r\n        <QuoteContainer>\r\n          <QuoteText><i className={'fa fa-quote-left'} style={iconStyle}></i>{quoteText}</QuoteText>\r\n          <QuoteAuthor>{quoteAuthor}</QuoteAuthor>\r\n        </QuoteContainer>\r\n      );\r\n    \r\n  }\r\n}\r\n\r\nexport default Quote;","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  width: 90%;\r\n  flex-direction: column-reverse;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 45px auto 5px auto;\r\n  user-select: none;\r\n\r\n  @media (min-width: 700px) {\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n  }\r\n`\r\nconst Button = styled.button`\r\n  background-color: ${props => props.buttonColor};\r\n  border: none;\r\n  border-radius: 5px;\r\n  font: inherit;\r\n  font-weight: 500;\r\n  user-select: none;\r\n\r\n  &:focus {\r\n    outline: 0;\r\n  };\r\n\r\n  &:hover {\r\n    background-color: ${props => props.hoverColor};\r\n  }\r\n\r\n  &:active {\r\n    box-shadow: inset 3px 3px 10px 1px rgba(0, 0, 0, 0.2);\r\n  }\r\n`\r\nconst SocialButton = styled(Button)`\r\n  margin: 15px 5px;\r\n  padding: 7.5px 8px;\r\n`\r\nconst QuoteButton = styled(Button)`\r\n  padding: 13px 13px;\r\n  width: 50%;\r\n  margin-bottom: 10px;\r\n\r\n  @media (min-width: 700px) {\r\n    width: 150px;\r\n  }\r\n`\r\n\r\nclass Buttons extends Component {\r\n  render() {\r\n    const hoverColor =this.props.hoverColor;\r\n    const buttonColor = this.props.buttonColor;\r\n    const buttonNewQuote = this.props.buttonNewQuote;\r\n    const tweetFunc = this.props.tweetFunc;\r\n    const tumblrFunc = this.props.tumblrFunc;\r\n      return (      \r\n        <ButtonContainer>\r\n        <div>\r\n          <SocialButton buttonColor={buttonColor} onClick={tweetFunc} hoverColor={hoverColor}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n              <path d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\" /></svg>\r\n          </SocialButton>\r\n          <SocialButton buttonColor={buttonColor} onClick={tumblrFunc} hoverColor={hoverColor}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"\r\n              viewBox=\"0 0 24 24\">\r\n              <path d=\"M19.512 17.489l-.096-.068h-3.274c-.153 0-.16-.467-.163-.622v-5.714c0-.056.045-.101.101-.101h3.82c.056 0 .101-.045.101-.101v-5.766c0-.055-.045-.1-.101-.1h-3.803c-.055 0-.1-.045-.1-.101v-4.816c0-.055-.045-.1-.101-.1h-7.15c-.489 0-1.053.362-1.135 1.034-.341 2.778-1.882 4.125-4.276 4.925l-.267.089-.068.096v4.74c0 .056.045.101.1.101h2.9v6.156c0 4.66 3.04 6.859 9.008 6.859 2.401 0 5.048-.855 5.835-1.891l.157-.208-1.488-4.412zm.339 4.258c-.75.721-2.554 1.256-4.028 1.281l-.165.001c-4.849 0-5.682-3.701-5.682-5.889v-7.039c0-.056-.045-.101-.1-.101h-2.782c-.056 0-.101-.045-.101-.101l-.024-3.06.064-.092c2.506-.976 3.905-2.595 4.273-5.593.021-.167.158-.171.159-.171h3.447c.055 0 .101.045.101.101v4.816c0 .056.045.101.1.101h3.803c.056 0 .101.045.101.1v3.801c0 .056-.045.101-.101.101h-3.819c-.056 0-.097.045-.097.101v6.705c.023 1.438.715 2.167 2.065 2.167.544 0 1.116-.126 1.685-.344.053-.021.111.007.13.061l.995 2.95-.024.104z\"\r\n                fillRule=\"evenodd\" clipRule=\"evenodd\" /></svg>\r\n          </SocialButton>\r\n        </div>\r\n        <QuoteButton buttonColor={buttonColor} onClick={buttonNewQuote} hoverColor={hoverColor}>New Quote</QuoteButton>\r\n      </ButtonContainer>\r\n      );\r\n    \r\n  }\r\n}\r\n\r\nexport default Buttons;","let rng = function getRandomInt(max) {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n};\r\n\r\nlet tweet = function tweetQuote(quotes) {\r\n    let a = document.createElement('a');\r\n    a.target = \"_blank\";\r\n    a.href = `https://twitter.com/intent/tweet?hashtags=quotes&text=${encodeURIComponent(`\"${quotes.quote}\" ${quotes.author}`)}`\r\n    a.click();\r\n}\r\n\r\nlet tumblr = function tumblrQuote(quotes) {\r\n    console.dir(quotes)\r\n    let a = document.createElement('a');\r\n    a.target = \"_blank\";\r\n    a.href = `https://www.tumblr.com/widgets/share/tool?posttype=quote&tags=quotes&caption=${encodeURIComponent(quotes.author)}&content=${encodeURIComponent(quotes.quote)}&canonicalUrl=https%3A%2F%2Fwww.tumblr.com%2Fbuttons&shareSource=tumblr_share_button`\r\n    a.click();\r\n}\r\n\r\n\r\nexport { rng, tweet, tumblr};","import React, { Component } from 'react';\r\nimport './Reset.css';\r\nimport Quote from './Quote';\r\nimport Buttons from './Buttons';\r\nimport { rng, tweet, tumblr } from './helper.js';\r\nimport db from './db.json';\r\nimport styled, {ThemeProvider} from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: ${props => props.bgColor};\r\n  font-family: \"Raleway\", sans-serif;\r\n  font-weight: 400;\r\n`\r\nconst Main = styled.main`\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  height: 100%;\r\n  padding: 10px;\r\n  background-color: white;\r\n  border-radius: 3.5px;\r\n\r\n  @media (min-width: 700px) {\r\n    flex-grow: 0;\r\n    max-width: 700px;\r\n  }\r\n\r\n  @media (max-width: 350px) {\r\n      justify-content: flex-start;\r\n  }\r\n`\r\nconst theme = {\r\n  main: \"mediumseagreen\"\r\n};\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      quotes: [],\r\n      random: rng(360)\r\n    };\r\n    this.getQuote = this.getQuote.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getQuote();\r\n  }\r\n\r\n\r\n  getQuote() {\r\n    this.setState({\r\n      quotes: db.quotes[rng(101)],\r\n      random: rng(360)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const quotes = this.state.quotes;\r\n    const getQuote = this.getQuote;\r\n    const randomColor = `hsl(${this.state.random}, 70%, 70%)`;\r\n    const fontAws = {\r\n      paddingRight: '0.5em',\r\n      fontSize: '1.4em',\r\n      color: `${randomColor}`\r\n    }\r\n    const tweetPost = function () {\r\n      tweet(quotes)\r\n    }\r\n    const tumblrPost = () => tumblr(quotes);\r\n      return (\r\n        <Container bgColor={randomColor}>\r\n          <Main>\r\n            <div>\r\n              <Quote quoteText={quotes.quote} quoteAuthor={quotes.author} iconStyle={fontAws} />\r\n              <ThemeProvider theme={theme}> \r\n              <Buttons buttonColor={randomColor} hoverColor={`hsl(${this.state.random}, 75%, 75%)`} buttonNewQuote={getQuote} tweetFunc={tweetPost} tumblrFunc={tumblrPost} />\r\n              </ThemeProvider>\r\n              </div>\r\n          </Main>\r\n        </Container>\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}